
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '07BC4037F977FEF7F29C9546DC0A370E'
    
_lr_action_items = {'RETURN':([11,25,29,31,32,34,35,36,40,43,45,46,49,51,56,57,59,80,81,95,99,100,102,103,104,],[-6,-7,-64,-64,-20,-19,38,-22,-27,-29,-23,-21,-25,-24,-18,-26,-33,-28,-34,38,38,-32,-30,38,-31,]),'LESS':([42,44,47,48,50,53,55,83,84,87,94,96,97,],[64,-57,-52,-56,-58,-37,-48,-47,-56,-55,-51,-38,-59,]),'VOID':([0,2,5,6,8,10,11,13,23,25,28,29,31,32,34,56,],[4,-5,4,-4,-3,-2,-6,17,4,-7,-10,-64,4,-20,-19,-18,]),'NUMBER':([11,12,25,29,31,32,34,35,36,38,40,43,45,46,49,51,52,56,57,59,61,62,63,64,65,66,67,68,69,70,71,72,74,75,76,77,78,79,80,81,95,98,99,100,102,103,104,],[-6,14,-7,-64,-64,-20,-19,50,-22,50,-27,-29,-23,-21,-25,-24,50,-18,-26,-33,50,50,50,-41,-45,-46,-44,-49,-42,-50,-43,50,50,50,50,-53,-54,50,-28,-34,50,50,50,-32,-30,50,-31,]),'LBRACKET':([9,22,37,53,],[12,26,12,74,]),'WHILE':([11,25,29,31,32,34,35,36,40,43,45,46,49,51,56,57,59,80,81,95,99,100,102,103,104,],[-6,-7,-64,-64,-20,-19,39,-22,-27,-29,-23,-21,-25,-24,-18,-26,-33,-28,-34,39,39,-32,-30,39,-31,]),'MINUS':([42,44,47,48,50,53,55,83,84,85,87,94,96,97,],[70,-57,-52,-56,-58,-37,-48,-47,-56,70,-55,-51,-38,-59,]),'GREATEREQUAL':([42,44,47,48,50,53,55,83,84,87,94,96,97,],[67,-57,-52,-56,-58,-37,-48,-47,-56,-55,-51,-38,-59,]),'RPAREN':([13,16,17,18,19,20,22,27,30,41,42,44,47,48,50,53,55,73,75,82,83,84,85,86,87,89,90,91,92,93,94,96,97,101,],[-64,-11,-12,-14,24,-15,-16,-13,-17,-36,-40,-57,-52,-56,-58,-37,-48,87,-64,95,-47,-56,-39,-35,-55,97,-60,-63,-61,99,-51,-38,-59,-62,]),'SEMICOLON':([9,11,21,25,29,31,32,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,51,53,55,56,57,58,59,60,80,81,83,84,85,86,87,94,95,96,97,99,100,102,103,104,],[11,-6,25,-7,-64,-64,-20,-19,43,-22,11,59,-27,-36,-40,-29,-57,-23,-21,-52,-56,-25,-58,-24,-37,-48,-18,-26,80,-33,81,-28,-34,-47,-56,-39,-35,-55,-51,43,-38,-59,43,-32,-30,43,-31,]),'COMMA':([13,16,18,20,22,27,30,41,42,44,47,48,50,53,55,83,84,85,86,87,90,91,94,96,97,101,],[-64,23,-14,-15,-16,-13,-17,-36,-40,-57,-52,-56,-58,-37,-48,-47,-56,-39,-35,-55,98,-63,-51,-38,-59,-62,]),'PLUS':([42,44,47,48,50,53,55,83,84,85,87,94,96,97,],[68,-57,-52,-56,-58,-37,-48,-47,-56,68,-55,-51,-38,-59,]),'$end':([2,5,6,7,8,10,11,25,28,56,],[-5,-1,-4,0,-3,-2,-6,-7,-10,-18,]),'DIVIDE':([44,47,48,50,53,55,83,84,87,94,96,97,],[-57,-52,-56,-58,-37,78,78,-56,-55,-51,-38,-59,]),'EQUAL':([48,53,96,],[72,-37,-38,]),'ELSE':([40,43,45,49,51,56,57,59,80,81,100,102,104,],[-27,-29,-23,-25,-24,-18,-26,-33,-28,-34,-32,103,-31,]),'LPAREN':([9,11,25,29,31,32,34,35,36,38,39,40,43,45,46,49,51,52,53,54,56,57,59,61,62,63,64,65,66,67,68,69,70,71,72,74,75,76,77,78,79,80,81,95,98,99,100,102,103,104,],[13,-6,-7,-64,-64,-20,-19,52,-22,52,61,-27,-29,-23,-21,-25,-24,52,75,76,-18,-26,-33,52,52,52,-41,-45,-46,-44,-49,-42,-50,-43,52,52,52,52,-53,-54,52,-28,-34,52,52,52,-32,-30,52,-31,]),'LESSEQUAL':([42,44,47,48,50,53,55,83,84,87,94,96,97,],[69,-57,-52,-56,-58,-37,-48,-47,-56,-55,-51,-38,-59,]),'LBLOCK':([11,24,25,29,31,32,34,35,36,40,43,45,46,49,51,56,57,59,80,81,95,99,100,102,103,104,],[-6,29,-7,-64,-64,-20,-19,29,-22,-27,-29,-23,-21,-25,-24,-18,-26,-33,-28,-34,29,29,-32,-30,29,-31,]),'TIMES':([44,47,48,50,53,55,83,84,87,94,96,97,],[-57,-52,-56,-58,-37,77,77,-56,-55,-51,-38,-59,]),'ID':([1,3,4,11,15,17,25,29,31,32,33,34,35,36,38,40,43,45,46,49,51,52,56,57,59,61,62,63,64,65,66,67,68,69,70,71,72,74,75,76,77,78,79,80,81,95,98,99,100,102,103,104,],[9,-8,-9,-6,22,-9,-7,-64,-64,-20,37,-19,53,-22,53,-27,-29,-23,-21,-25,-24,53,-18,-26,-33,53,53,53,-41,-45,-46,-44,-49,-42,-50,-43,53,53,53,53,-53,-54,53,-28,-34,53,53,53,-32,-30,53,-31,]),'IF':([11,25,29,31,32,34,35,36,40,43,45,46,49,51,56,57,59,80,81,95,99,100,102,103,104,],[-6,-7,-64,-64,-20,-19,54,-22,-27,-29,-23,-21,-25,-24,-18,-26,-33,-28,-34,54,54,-32,-30,54,-31,]),'GREATER':([42,44,47,48,50,53,55,83,84,87,94,96,97,],[71,-57,-52,-56,-58,-37,-48,-47,-56,-55,-51,-38,-59,]),'INT':([0,2,5,6,8,10,11,13,23,25,28,29,31,32,34,56,],[3,-5,3,-4,-3,-2,-6,3,3,-7,-10,-64,3,-20,-19,-18,]),'DEQUAL':([42,44,47,48,50,53,55,83,84,87,94,96,97,],[65,-57,-52,-56,-58,-37,-48,-47,-56,-55,-51,-38,-59,]),'DISTINT':([42,44,47,48,50,53,55,83,84,87,94,96,97,],[66,-57,-52,-56,-58,-37,-48,-47,-56,-55,-51,-38,-59,]),'RBLOCK':([11,25,29,31,32,34,35,36,40,43,45,46,49,51,56,57,59,80,81,100,102,104,],[-6,-7,-64,-64,-20,-19,56,-22,-27,-29,-23,-21,-25,-24,-18,-26,-33,-28,-34,-32,-30,-31,]),'RBRACKET':([14,26,41,42,44,47,48,50,53,55,83,84,85,86,87,88,94,96,97,],[21,30,-36,-40,-57,-52,-56,-58,-37,-48,-47,-56,-39,-35,-55,96,-51,-38,-59,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'param_list':([13,],[16,]),'return_stmt':([35,95,99,103,],[40,40,40,40,]),'simple_expression':([35,38,52,61,72,74,75,76,95,98,99,103,],[41,41,41,41,41,41,41,41,41,41,41,41,]),'additive_expression':([35,38,52,61,63,72,74,75,76,95,98,99,103,],[42,42,42,42,85,42,42,42,42,42,42,42,42,]),'type_specifier':([0,5,13,23,31,],[1,1,15,15,33,]),'param':([13,23,],[18,27,]),'var_declaration':([0,5,31,],[6,6,34,]),'program':([0,],[7,]),'call':([35,38,52,61,62,63,72,74,75,76,79,95,98,99,103,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'statement':([35,95,99,103,],[46,100,102,104,]),'factor':([35,38,52,61,62,63,72,74,75,76,79,95,98,99,103,],[47,47,47,47,47,47,47,47,47,47,94,47,47,47,47,]),'var':([35,38,52,61,62,63,72,74,75,76,79,95,98,99,103,],[48,48,48,48,84,84,48,48,48,48,84,48,48,48,48,]),'selection_stmt':([35,95,99,103,],[49,49,49,49,]),'empty':([13,29,31,75,],[20,32,36,92,]),'addop':([42,85,],[62,62,]),'args':([75,],[89,]),'compount_stmt':([24,35,95,99,103,],[28,51,51,51,51,]),'args_list':([75,],[90,]),'declaration':([0,5,],[8,10,]),'local_declarations':([29,],[31,]),'term':([35,38,52,61,62,63,72,74,75,76,95,98,99,103,],[55,55,55,55,83,55,55,55,55,55,55,55,55,55,]),'relop':([42,],[63,]),'expression_stmt':([35,95,99,103,],[45,45,45,45,]),'declaration_list':([0,],[5,]),'fun_declaration':([0,5,],[2,2,]),'mulop':([55,83,],[79,79,]),'params':([13,],[19,]),'statement_list':([31,],[35,]),'iteration_stmt':([35,95,99,103,],[57,57,57,57,]),'expression':([35,38,52,61,72,74,75,76,95,98,99,103,],[58,60,73,82,86,88,91,93,58,101,58,58,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> declaration_list','program',1,'p_program','cminus_parser.py',13),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list_1','cminus_parser.py',17),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list_2','cminus_parser.py',22),
  ('declaration -> var_declaration','declaration',1,'p_declaration','cminus_parser.py',26),
  ('declaration -> fun_declaration','declaration',1,'p_declaration','cminus_parser.py',27),
  ('var_declaration -> type_specifier ID SEMICOLON','var_declaration',3,'p_var_declaration_1','cminus_parser.py',31),
  ('var_declaration -> type_specifier ID LBRACKET NUMBER RBRACKET SEMICOLON','var_declaration',6,'p_var_declaration_2','cminus_parser.py',35),
  ('type_specifier -> INT','type_specifier',1,'p_type_specifier_1','cminus_parser.py',39),
  ('type_specifier -> VOID','type_specifier',1,'p_type_specifier_2','cminus_parser.py',43),
  ('fun_declaration -> type_specifier ID LPAREN params RPAREN compount_stmt','fun_declaration',6,'p_fun_declaration','cminus_parser.py',48),
  ('params -> param_list','params',1,'p_params_1','cminus_parser.py',53),
  ('params -> VOID','params',1,'p_params_2','cminus_parser.py',58),
  ('param_list -> param_list COMMA param','param_list',3,'p_param_list_1','cminus_parser.py',62),
  ('param_list -> param','param_list',1,'p_param_list_2','cminus_parser.py',66),
  ('param_list -> empty','param_list',1,'p_param_list_3','cminus_parser.py',70),
  ('param -> type_specifier ID','param',2,'p_param_1','cminus_parser.py',74),
  ('param -> type_specifier ID LBRACKET RBRACKET','param',4,'p_param_2','cminus_parser.py',78),
  ('compount_stmt -> LBLOCK local_declarations statement_list RBLOCK','compount_stmt',4,'p_compount_stmt','cminus_parser.py',82),
  ('local_declarations -> local_declarations var_declaration','local_declarations',2,'p_local_declarations_1','cminus_parser.py',86),
  ('local_declarations -> empty','local_declarations',1,'p_local_declarations_2','cminus_parser.py',90),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list_1','cminus_parser.py',94),
  ('statement_list -> empty','statement_list',1,'p_statement_list_2','cminus_parser.py',98),
  ('statement -> expression_stmt','statement',1,'p_statement','cminus_parser.py',102),
  ('statement -> compount_stmt','statement',1,'p_statement','cminus_parser.py',103),
  ('statement -> selection_stmt','statement',1,'p_statement','cminus_parser.py',104),
  ('statement -> iteration_stmt','statement',1,'p_statement','cminus_parser.py',105),
  ('statement -> return_stmt','statement',1,'p_statement','cminus_parser.py',106),
  ('expression_stmt -> expression SEMICOLON','expression_stmt',2,'p_expression_stmt_1','cminus_parser.py',111),
  ('expression_stmt -> SEMICOLON','expression_stmt',1,'p_expression_stmt_2','cminus_parser.py',115),
  ('selection_stmt -> IF LPAREN expression RPAREN statement','selection_stmt',5,'p_selection_stmt_1','cminus_parser.py',119),
  ('selection_stmt -> IF LPAREN expression RPAREN statement ELSE statement','selection_stmt',7,'p_selection_stmt_2','cminus_parser.py',123),
  ('iteration_stmt -> WHILE LPAREN expression RPAREN statement','iteration_stmt',5,'p_iteration_stmt','cminus_parser.py',127),
  ('return_stmt -> RETURN SEMICOLON','return_stmt',2,'p_return_stmt_1','cminus_parser.py',131),
  ('return_stmt -> RETURN expression SEMICOLON','return_stmt',3,'p_return_stmt_2','cminus_parser.py',135),
  ('expression -> var EQUAL expression','expression',3,'p_expression_1','cminus_parser.py',139),
  ('expression -> simple_expression','expression',1,'p_expression_2','cminus_parser.py',143),
  ('var -> ID','var',1,'p_var_1','cminus_parser.py',147),
  ('var -> ID LBRACKET expression RBRACKET','var',4,'p_var_2','cminus_parser.py',151),
  ('simple_expression -> additive_expression relop additive_expression','simple_expression',3,'p_simple_expression_1','cminus_parser.py',155),
  ('simple_expression -> additive_expression','simple_expression',1,'p_simple_expression_2','cminus_parser.py',159),
  ('relop -> LESS','relop',1,'p_relop','cminus_parser.py',164),
  ('relop -> LESSEQUAL','relop',1,'p_relop','cminus_parser.py',165),
  ('relop -> GREATER','relop',1,'p_relop','cminus_parser.py',166),
  ('relop -> GREATEREQUAL','relop',1,'p_relop','cminus_parser.py',167),
  ('relop -> DEQUAL','relop',1,'p_relop','cminus_parser.py',168),
  ('relop -> DISTINT','relop',1,'p_relop','cminus_parser.py',169),
  ('additive_expression -> additive_expression addop term','additive_expression',3,'p_additive_expression_1','cminus_parser.py',174),
  ('additive_expression -> term','additive_expression',1,'p_additive_expression_2','cminus_parser.py',178),
  ('addop -> PLUS','addop',1,'p_addop','cminus_parser.py',182),
  ('addop -> MINUS','addop',1,'p_addop','cminus_parser.py',183),
  ('term -> term mulop factor','term',3,'p_term_1','cminus_parser.py',188),
  ('term -> factor','term',1,'p_term_2','cminus_parser.py',192),
  ('mulop -> TIMES','mulop',1,'p_mulop','cminus_parser.py',196),
  ('mulop -> DIVIDE','mulop',1,'p_mulop','cminus_parser.py',197),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor_1','cminus_parser.py',202),
  ('factor -> var','factor',1,'p_factor_2','cminus_parser.py',206),
  ('factor -> call','factor',1,'p_factor_3','cminus_parser.py',210),
  ('factor -> NUMBER','factor',1,'p_factor_4','cminus_parser.py',214),
  ('call -> ID LPAREN args RPAREN','call',4,'p_call','cminus_parser.py',218),
  ('args -> args_list','args',1,'p_args','cminus_parser.py',222),
  ('args -> empty','args',1,'p_args','cminus_parser.py',223),
  ('args_list -> args_list COMMA expression','args_list',3,'p_args_list_1','cminus_parser.py',228),
  ('args_list -> expression','args_list',1,'p_args_list_2','cminus_parser.py',232),
  ('empty -> <empty>','empty',0,'p_empty','cminus_parser.py',236),
]
